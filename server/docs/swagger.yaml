basePath: /api/v1
definitions:
  dto.BaseResponseDTO:
    properties:
      message:
        example: message
        type: string
    type: object
  dto.CountryResponseDTO:
    properties:
      code:
        example: CA
        type: string
      currency:
        example: $
        type: string
      name:
        example: Canada
        type: string
    type: object
  dto.ErrorResponseDTO:
    properties:
      error_message:
        example: error message
        type: string
    type: object
  dto.TokenDTO:
    properties:
      token:
        example: abc.abc.abc
        type: string
      token_type:
        example: Bearer
        type: string
    type: object
  dto.UserRequestDTO:
    properties:
      Email:
        example: test@email.com
        type: string
      Password:
        example: test-password
        type: string
    required:
    - Email
    - Password
    type: object
  entities.Trip:
    properties:
      Budget:
        example: 2000.12
        type: number
      CountryId:
        example: 1
        type: integer
      CreatedAt:
        example: "2023-05-29"
        type: string
      DeletedAt:
        example: "2023-05-29"
        type: string
      Description:
        example: sample-description
        type: string
      EndDateTime:
        example: "2023-08-29"
        type: string
      ID:
        example: 1
        type: integer
      Name:
        example: sample-name
        type: string
      StartDateTime:
        example: "2023-05-29"
        type: string
      UpdatedAt:
        example: "2023-05-29"
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a pocket-mate server api
  title: Pocket Mate API
  version: 1.0.0
paths:
  /country:
    get:
      consumes:
      - application/json
      description: get a list of all available countires
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CountryResponseDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponseDTO'
      summary: Get all country
      tags:
      - country
  /trip:
    get:
      consumes:
      - application/json
      description: get trip
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Trip'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponseDTO'
      summary: Get all trip
      tags:
      - trip
  /user:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User registration
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BaseResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponseDTO'
      summary: User registration
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TokenDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponseDTO'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponseDTO'
      summary: Login
      tags:
      - user
swagger: "2.0"
